!function(e){"use strict";function t(e){return this.id="viewer-"+Math.round(Math.random()*Math.pow(10,6)).toString(),this.viewerOpen=!1,this.figure=e,this.scrim=document.getElementsByClassName("scrim")[0],this.selfLink=e.getElementsByClassName("self-link")[0],this.selfLinkText=this.selfLink&&this.selfLink.getElementsByTagName("label")[0],this.lastWindowWidth=window.innerWidth,this.transitionEndEvent=function(){var e,t=document.createElement("fakeelement"),i={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",MSTransition:"msTransitionEnd",OTransition:"otransitionend",transition:"transitionend"};for(e in i)if(i.hasOwnProperty(e)&&void 0!==t.style[e])return i[e]}(),this.forceSmall=0<=this.figure.className.indexOf("force-small"),this.forceMedium=0<=this.figure.className.indexOf("force-medium"),this.forceLarge=0<=this.figure.className.indexOf("force-large"),window.addEventListener("keyup",function(e){27===e.keyCode&&this.closeViewer()}.bind(this)),this.load(),0<=this.figure.className.indexOf("with-viewer")&&this.figure.addEventListener("click",this.openViewer.bind(this)),this.selfLink&&this.selfLink.addEventListener("click",this.copyLinkToClipboard.bind(this)),this}t.prototype.copyLinkToClipboard=function(e){var t;e.stopPropagation(),e.preventDefault(),t=this.selfLink.href,(e=document.createElement("textarea")).value=t,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e),t=0<document.getSelection().rangeCount&&document.getSelection().getRangeAt(0),e.select(),document.execCommand("copy"),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t));var i=this.selfLinkText.textContent;this.selfLinkText.textContent="Copied!",setTimeout(function(){this.selfLinkText.textContent=i}.bind(this),1e4)},t.prototype.closeViewer=function(){window.removeEventListener("scroll",this.onScroll),window.removeEventListener("resize",this.onShouldCloseViewer),window.removeEventListener("orientationchange",this.onShouldCloseViewer),this.scrim.removeEventListener("click",this.onShouldCloseViewer),this.figure.addEventListener(this.transitionEndEvent,function(){-1==document.body.className.indexOf(this.id)&&(this.viewerOpen=!1,this.figure.closest("section").style.contentVisibility="auto",this.figure.className=this.figure.className.replace("is-open","").replace(/^\s+|\s+$/g,""),this.figure.style.zIndex="")}.bind(this)),document.body.className=document.body.className.replace(this.id,"").replace(/^\s+|\s+$/g,""),this.figure.style.transform=""},t.prototype.openViewer=function(){if(0<=document.body.className.indexOf(this.id))this.closeViewer();else{this.viewerOpen=!0;var e,t,i,n=window.getComputedStyle(this.figure),s=parseFloat(n.height),o=parseFloat(n.width),r=window.innerHeight,a=window.innerWidth,n=this.figure.getBoundingClientRect();o/s<=a/r?(t=(a-o*(e=r/s))/2-n.left,i=-1*n.top):(i=(r-s*(e=a/o))/2-n.top,t=-1*n.left);try{this.figure.closest("section").style.contentVisibility="visible"}catch(e){console.error(e)}document.body.className+=" "+this.id,this.figure.className+=" is-open",this.figure.style.zIndex="800",this.figure.style.transform="translate3d("+t+"px,"+i+"px,0) scale("+e+")",setTimeout(function(){this.figure.className.indexOf("loaded-raw")<=0&&this.loadRaw()}.bind(this),300),this.onScroll=function(){var e=this.figure.getBoundingClientRect().top;50<Math.abs(e)&&this.closeViewer()}.bind(this),this.onShouldCloseViewer=function(e){this.closeViewer(),e.stopPropagation()}.bind(this),this.scrim.addEventListener("click",this.onShouldCloseViewer),window.addEventListener("resize",this.onShouldCloseViewer),window.addEventListener("orientationchange",this.onShouldCloseViewer),window.addEventListener("scroll",this.onScroll)}},t.prototype.load=function(){var e=new Image;e.src=this.figure.dataset[this.getSize()],e.alt=this.figure.dataset.alt,e.className="full",e.onload=function(){this.figure.className+=" loaded"}.bind(this),this.figure.appendChild(e)},t.prototype.loadRaw=function(){var e=new Image;e.src=this.figure.dataset.raw,e.alt=this.figure.dataset.alt,e.className="raw",e.onload=function(){this.figure.className+=" loaded-raw"}.bind(this),this.figure.appendChild(e)},t.prototype.getSize=function(){if(this.forceSmall)return"small";if(this.forceMedium)return"medium";if(this.forceLarge)return"large";var e=this.lastWindowWidth<768?0:this.lastWindowWidth<1440?1:2;return 1<window.devicePixelRatio&&e<2&&(e+=1),["small","medium","large"][e]},"function"==typeof define&&define.amd?define(t):"undefined"!=typeof module&&module.exports?module.exports=t:e.ProgressiveImage=t}(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
