!function(e){"use strict";function i(){var e,i=document.createElement("fakeelement"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",MSTransition:"msTransitionEnd",OTransition:"otransitionend",transition:"transitionend"};for(e in t)if(t.hasOwnProperty(e)&&void 0!==i.style[e])return t[e]}function t(e){return this.id="viewer-"+Math.round(Math.random()*Math.pow(10,6)).toString(),this.viewerOpen=!1,this.figure=e,this.scrim=document.getElementsByClassName("scrim")[0],this.lastWindowWidth=window.innerWidth,this.transitionEndEvent=i(),this.forceSmall=this.figure.className.indexOf("force-small")>=0,this.forceMedium=this.figure.className.indexOf("force-medium")>=0,this.forceLarge=this.figure.className.indexOf("force-large")>=0,window.addEventListener("keyup",function(e){27===e.keyCode&&this.closeViewer()}.bind(this)),this.load(),this.figure.className.indexOf("with-viewer")>=0&&this.figure.addEventListener("click",this.openViewer.bind(this)),this}t.prototype.closeViewer=function(){window.removeEventListener("scroll",this.onScroll),window.removeEventListener("resize",this.onShouldCloseViewer),window.removeEventListener("orientationchange",this.onShouldCloseViewer),this.scrim.removeEventListener("click",this.onShouldCloseViewer),this.figure.addEventListener(this.transitionEndEvent,function(){document.body.className.indexOf(this.id)==-1&&(this.viewerOpen=!1,this.figure.className=this.figure.className.replace("is-open","").replace(/^\s+|\s+$/g,""),this.figure.style.zIndex="")}.bind(this)),document.body.className=document.body.className.replace(this.id,"").replace(/^\s+|\s+$/g,""),this.figure.style.transform=""},t.prototype.openViewer=function(){if(document.body.className.indexOf(this.id)>=0)return void this.closeViewer();this.viewerOpen=!0;var e,i,t,s=window.getComputedStyle(this.figure),n=parseFloat(s.height),o=parseFloat(s.width),r=window.innerHeight,a=window.innerWidth,d=this.figure.getBoundingClientRect(),l=o/n,h=a/r;if(h>=l){e=r/n;var c=o*e;i=(a-c)/2-d.left,t=d.top*-1}else{e=a/o;var u=n*e;t=(r-u)/2-d.top,i=d.left*-1}document.body.className+=" "+this.id,this.figure.className+=" is-open",this.figure.style.zIndex="800",this.figure.style.transform="translate3d("+i+"px,"+t+"px,0) scale("+e+")",setTimeout(function(){this.figure.className.indexOf("loaded-raw")<=0&&this.loadRaw()}.bind(this),300),this.onScroll=function(){var e=this.figure.getBoundingClientRect().top;Math.abs(e)>50&&this.closeViewer()}.bind(this),this.onShouldCloseViewer=function(e){this.closeViewer(),e.stopPropagation()}.bind(this),this.scrim.addEventListener("click",this.onShouldCloseViewer),window.addEventListener("resize",this.onShouldCloseViewer),window.addEventListener("orientationchange",this.onShouldCloseViewer),window.addEventListener("scroll",this.onScroll)},t.prototype.load=function(){var e=new Image;e.src=this.figure.dataset[this.getSize()],e.className="full",e.onload=function(){this.figure.className+=" loaded"}.bind(this),this.figure.appendChild(e)},t.prototype.loadRaw=function(){var e=new Image;e.src=this.figure.dataset.raw,e.className="raw",e.onload=function(){this.figure.className+=" loaded-raw"}.bind(this),this.figure.appendChild(e)},t.prototype.getSize=function(){if(this.forceSmall)return"small";if(this.forceMedium)return"medium";if(this.forceLarge)return"large";var e,i=["small","medium","large"];return e=this.lastWindowWidth<768?0:this.lastWindowWidth<1440?1:2,window.devicePixelRatio>1&&e<2&&(e+=1),i[e]},"function"==typeof define&&define.amd?define(t):"undefined"!=typeof module&&module.exports?module.exports=t:e.ProgressiveImage=t}(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
